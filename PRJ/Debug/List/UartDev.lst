###############################################################################
#                                                                             #
# IAR C/C++ Compiler V1.41.1.50116 for STM8             20/Oct/2016  15:22:21 #
# Copyright 2010-2013 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  D:\EF_proj\STM8\PortableRGB\PortableRGB_1.2\USER\UartDev #
#                    .c                                                       #
#    Command line =  D:\EF_proj\STM8\PortableRGB\PortableRGB_1.2\USER\UartDev #
#                    .c -e -On --no_cse --no_unroll --no_inline               #
#                    --no_code_motion --no_tbaa --no_cross_call --debug       #
#                    --code_model medium --data_model medium -o               #
#                    D:\EF_proj\STM8\PortableRGB\PortableRGB_1.2\PRJ\Debug\Ob #
#                    j\ --dlib_config D:\EF_proj\STM8\IAR\STM8_1.4\stm8\LIB\d #
#                    lstm8mmn.h -D STM8L15X_MD -lcN                           #
#                    D:\EF_proj\STM8\PortableRGB\PortableRGB_1.2\PRJ\Debug\Li #
#                    st\ -I D:\EF_proj\STM8\PortableRGB\PortableRGB_1.2\PRJ\. #
#                    .\LIB\STM8L15x_StdPeriph_Driver\inc\ -I                  #
#                    D:\EF_proj\STM8\PortableRGB\PortableRGB_1.2\PRJ\..\USER\ #
#                     --vregs 16                                              #
#    List file    =  D:\EF_proj\STM8\PortableRGB\PortableRGB_1.2\PRJ\Debug\Li #
#                    st\UartDev.lst                                           #
#    Object file  =  D:\EF_proj\STM8\PortableRGB\PortableRGB_1.2\PRJ\Debug\Ob #
#                    j\UartDev.o                                              #
#                                                                             #
#                                                                             #
###############################################################################

D:\EF_proj\STM8\PortableRGB\PortableRGB_1.2\USER\UartDev.c
      1          /*;*******************************************************************************
      2          ; FILENAME		: UartDev.c
      3          ; AUTHOR		: Feng Liu
      4          ; PURPOSE		: Operation for UART Device of stm8l051
      5          ; REVISION		: 1.0
      6          ; SYSTEM CLOCK	        : 16MHz
      7          ; MCU type              : STM8L051F3            
      8          ; Date Time             : 2016-04-18
      9          ; Copy right :          : Eastfield Lighting Co., Ltd.
     10          ;******************************************************************************/
     11          
     12          /* Includes ------------------------------------------------------------------*/
     13          #include "UartDev.h"
     14          #include "typedef.h"
     15          #include "global.h"
     16          #include "main.h"
     17          
     18          /* Private typedef -----------------------------------------------------------*/
     19          
     20          /* Private define ------------------------------------------------------------*/
     21          
     22          
     23          /* Private macro -------------------------------------------------------------*/
     24          /* Private variables ---------------------------------------------------------*/
     25          
     26          
     27          /* Public functions Declaration ----------------------------------------------*/
     28          /* Private macro -------------------------------------------------------------*/
     29          /* Private variables ---------------------------------------------------------*/
     30          /* Private function prototypes -----------------------------------------------*/
     31          
     32          /* Private functions ---------------------------------------------------------*/
     33          
     34          #define uchar unsigned char
     35          /* Public functions ----------------------------------------------------------*/
     36          void Usart1_Config(void)
     37          {
     38            // init as 115200, 1 stop, no parity, rx int, tx query;
     39            USART_DeInit (USART1);
     40            
     41            CLK_PeripheralClockConfig(CLK_Peripheral_USART1,ENABLE);
     42            SYSCFG->RMPCR1 &= 0xcf;
     43            SYSCFG->RMPCR1 |= 0x10;
     44            //GPIO_Init(GPIOC,GPIO_Pin_4,GPIO_Mode_In_PU_No_IT);
     45            //GPIO_Init(GPIOC,GPIO_Pin_3,GPIO_Mode_Out_PP_Low_Fast);
     46            //GPIO_Init(GPIOA,GPIO_Pin_3,GPIO_Mode_In_PU_No_IT);            //PA3 UART RX
     47            //GPIO_Init(GPIOA,GPIO_Pin_2,GPIO_Mode_Out_PP_Low_Fast);        //PA2 UART TX
     48            
     49            GPIO_ExternalPullUpConfig(GPIOA, GPIO_Pin_2, ENABLE);         // TX
     50            GPIO_ExternalPullUpConfig(GPIOA, GPIO_Pin_3, ENABLE);         // RX
     51            
     52            USART_Init( USART1,115200,USART_WordLength_8b,
     53                        USART_StopBits_1,USART_Parity_No,
     54                        (USART_Mode_TypeDef)(USART_Mode_Rx|USART_Mode_Tx));
     55            
     56            USART1->CR2 |= 0x0c;
     57            
     58            
     59            USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);
     60            
     61            USART_Cmd(USART1,ENABLE);
     62          }
     63          
     64          void Usart1_MPUSend (uint16_t data)
     65          {
     66            uint8_t highdata , lowdata;
     67            highdata = (uint8_t)(data >> 8);
     68            lowdata  = (uint8_t) data ;
     69            
     70            USART_SendData8(USART1, (uint8_t) highdata);
     71          
     72            // Loop until the end of tranmission
     73            while (USART_GetFlagStatus(USART1, USART_FLAG_TXE) == RESET);
     74            
     75            USART_SendData8(USART1, (uint8_t) lowdata);
     76          
     77            // Loop until the end of tranmission
     78            while (USART_GetFlagStatus(USART1, USART_FLAG_TXE) == RESET);
     79            
     80          }
     81          
     82          
     83          void Usart1_SendByte(u8 data)
     84          {
     85            // Usart1_SendData8 ((unsigned char) data);
     86            USART_SendData8(USART1, (uint8_t) data);
     87            
     88            // Loop until the end of tranmission
     89            while (USART_GetFlagStatus(USART1, USART_FLAG_TXE) == RESET);
     90          }
     91          
     92          unsigned char Usart1_SendDatArray (u8 * pBuf, unsigned char ucLen)
     93          {
     94            if ((!pBuf) || (!ucLen))
     95              return 2;
     96            
     97            for (unsigned char uc = 0; uc < (ucLen); uc ++) {
     98              Usart1_SendByte(pBuf[uc]);
     99            }
    100            
    101            return 1;
    102          }
    103          
    104          unsigned char Usart1_SendString (u8 * pBuf)
    105          {
    106            unsigned char ucPos;
    107            if (!pBuf)
    108              return 0;
    109            
    110            ucPos = 0;
    111            do {
    112              if (pBuf[ucPos] != '\0') {
    113                Usart1_SendByte(pBuf[ucPos ++]);
    114              } else 
    115                break;
    116            } while (1);
    117            
    118            return 1;
    119          }
    120          
    121          unsigned char Usart1_SendDHT11Data (u8 * pBuf)
    122          {
    123            unsigned char ucPos;
    124            if (!pBuf)
    125              return 0;
    126            
    127            ucPos = 2;
    128            do {
    129              if (pBuf[ucPos] != '\0') {
    130                Usart1_SendByte(pBuf[ucPos ++]);
    131              } else 
    132                break;
    133            } while (1);
    134            
    135            return 1;
    136          }
    137          
    138          /******************* (C) COPYRIGHT 2016 Eastfield Lighting *****END OF FILE****/

   Section sizes:

   Bytes  Function/Label
   -----  --------------
     111  Usart1_Config
      68  Usart1_MPUSend
      33  Usart1_SendByte
      64  Usart1_SendDHT11Data
      57  Usart1_SendDatArray
      63  Usart1_SendString

 
 396 bytes in section .far_func.text
 
 396 bytes of CODE memory

Errors: none
Warnings: none
